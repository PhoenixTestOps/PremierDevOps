<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.homeoffice</groupId>
	<artifactId>bdd-jira-zephyr-plugin</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>maven-plugin</packaging>
	
	<!--PROPERTIES-->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>		
		<!--B-->
		<bdd.framework.utilities.version>1.0-SNAPSHOT</bdd.framework.utilities.version>
		<!--G-->
		<google.gson.version>2.4</google.gson.version>
		<!--J-->
		<json.path.version>2.2.0</json.path.version>
		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>
		<junit.version>4.11</junit.version>
		<jacoco.maven.plugin.version>0.7.7.201606060606</jacoco.maven.plugin.version>		
		<!-- M -->
		<maven.plugin.api.version>3.0</maven.plugin.api.version>
		<maven.plugin.annotations.version>3.4</maven.plugin.annotations.version>
		<maven.compiler.version>3.1</maven.compiler.version>
		<maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
		<maven.failsafe.plugin.version>2.19.1</maven.failsafe.plugin.version>							
		<maven.javadoc.plugin.version>2.10.4</maven.javadoc.plugin.version>
		<!--R-->
		<rest.assured.version>2.9.0</rest.assured.version>
		<!--S-->
		<slf4j.version>1.7.5</slf4j.version>		
		<!--W-->
		<wiremock.version>2.5.1</wiremock.version>		
	</properties>
	<!--END of PROPERTIES-->

	<!--DEPENDENCIES-->
	<dependencies>	
		<!--B-->		
		<dependency>
			<groupId>com.homeoffice</groupId>
			<artifactId>bdd-framework-utilities</artifactId>
			<version>${bdd.framework.utilities.version}</version>		
		</dependency>
		<!--G-->		
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${google.gson.version}</version>
		</dependency>
		<!--J-->		
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${json.path.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest.assured.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!--M-->		
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven.plugin.api.version}</version>
		</dependency>	
		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<version>${maven.plugin.annotations.version}</version>
			<scope>provided</scope>
		</dependency>			
		<!--S-->		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>	
		<!--W-->
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<version>${wiremock.version}</version>
		</dependency>		
	</dependencies>
	<!--END of DEPENDENCIES-->
	
	<!--BUILD-->
	<build>
		<!--PLUGINS-->
		<plugins>
			<!--M-->		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${java.source.version}</source>
					<target>${java.target.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
				<executions>
					<execution>
						<id>acceptance-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>							
						</goals>
						<configuration>
							<forkCount>15</forkCount>
							<reuseForks>true</reuseForks>
							<includes>
								<include>**/*IT.class</include>
							</includes>
							<argLine>@{failsafeArgLine}</argLine>
							<systemPropertyVariables>
								<serenity.browser.width>1280</serenity.browser.width>
								<serenity.browser.height>800</serenity.browser.height>
							</systemPropertyVariables>
							<systemProperties>
								<property>
									<name>env</name>
									<value>${env}</value>
								</property>
							</systemProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>					
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>					
					</execution>
				</executions>
			</plugin>			
			<!--J-->			
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<executions>
					<!--
						Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed.
					-->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>target/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
							<propertyName>surefireArgLine</propertyName>						
						</configuration>
					</execution>					
					<!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>target/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>target/site/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					
					<!--
						Prepares the property pointing to the JaCoCo runtime agent which
						is passed as VM argument when Maven the Failsafe plugin is executed
					-->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>target/coverage-reports/jacoco-it.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>target/coverage-reports/jacoco-it.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>		
				</executions>
			</plugin>
		</plugins>
		<!--END of PLUGINS-->
	</build>
	<!--END of BUILD-->	
</project>